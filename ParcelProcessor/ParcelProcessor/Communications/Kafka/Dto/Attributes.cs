// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.3
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ParcelProcessor.Communications.Kafka.Dto
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.3")]
	public partial class Attributes : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"Attributes\",\"namespace\":\"ParcelProcessor.Communications." +
				"Kafka.Dto\",\"fields\":[{\"name\":\"Weight\",\"type\":\"float\"},{\"name\":\"Width\",\"type\":\"fl" +
				"oat\"},{\"name\":\"Length\",\"type\":\"float\"},{\"name\":\"Depth\",\"type\":\"float\"}]}");
		private float _Weight;
		private float _Width;
		private float _Length;
		private float _Depth;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return Attributes._SCHEMA;
			}
		}
		public float Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				this._Weight = value;
			}
		}
		public float Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				this._Width = value;
			}
		}
		public float Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				this._Length = value;
			}
		}
		public float Depth
		{
			get
			{
				return this._Depth;
			}
			set
			{
				this._Depth = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.Weight;
			case 1: return this.Width;
			case 2: return this.Length;
			case 3: return this.Depth;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.Weight = (System.Single)fieldValue; break;
			case 1: this.Width = (System.Single)fieldValue; break;
			case 2: this.Length = (System.Single)fieldValue; break;
			case 3: this.Depth = (System.Single)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
